/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Invoice;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvoiceRecord extends UpdatableRecordImpl<InvoiceRecord> implements Record3<Long, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invoice.id</code>.
     */
    public InvoiceRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.invoice.invoice_date</code>.
     */
    public InvoiceRecord setInvoiceDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.invoice_date</code>.
     */
    public LocalDate getInvoiceDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.invoice.organisation_tin</code>.
     */
    public InvoiceRecord setOrganisationTin(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.invoice.organisation_tin</code>.
     */
    public Long getOrganisationTin() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, LocalDate, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, LocalDate, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Invoice.INVOICE.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Invoice.INVOICE.INVOICE_DATE;
    }

    @Override
    public Field<Long> field3() {
        return Invoice.INVOICE.ORGANISATION_TIN;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getInvoiceDate();
    }

    @Override
    public Long component3() {
        return getOrganisationTin();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getInvoiceDate();
    }

    @Override
    public Long value3() {
        return getOrganisationTin();
    }

    @Override
    public InvoiceRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public InvoiceRecord value2(LocalDate value) {
        setInvoiceDate(value);
        return this;
    }

    @Override
    public InvoiceRecord value3(Long value) {
        setOrganisationTin(value);
        return this;
    }

    @Override
    public InvoiceRecord values(Long value1, LocalDate value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvoiceRecord
     */
    public InvoiceRecord() {
        super(Invoice.INVOICE);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(Long id, LocalDate invoiceDate, Long organisationTin) {
        super(Invoice.INVOICE);

        setId(id);
        setInvoiceDate(invoiceDate);
        setOrganisationTin(organisationTin);
    }

    /**
     * Create a detached, initialised InvoiceRecord
     */
    public InvoiceRecord(generated.tables.pojos.Invoice value) {
        super(Invoice.INVOICE);

        if (value != null) {
            setId(value.getId());
            setInvoiceDate(value.getInvoiceDate());
            setOrganisationTin(value.getOrganisationTin());
        }
    }
}
