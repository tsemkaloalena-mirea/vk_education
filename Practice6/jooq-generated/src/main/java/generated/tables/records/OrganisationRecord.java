/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Organisation;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganisationRecord extends UpdatableRecordImpl<OrganisationRecord> implements Record3<Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.organisation.tin</code>.
     */
    public OrganisationRecord setTin(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.organisation.tin</code>.
     */
    public Long getTin() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.organisation.name</code>.
     */
    public OrganisationRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.organisation.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.organisation.account</code>.
     */
    public OrganisationRecord setAccount(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.organisation.account</code>.
     */
    public Long getAccount() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Organisation.ORGANISATION.TIN;
    }

    @Override
    public Field<String> field2() {
        return Organisation.ORGANISATION.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Organisation.ORGANISATION.ACCOUNT;
    }

    @Override
    public Long component1() {
        return getTin();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getAccount();
    }

    @Override
    public Long value1() {
        return getTin();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getAccount();
    }

    @Override
    public OrganisationRecord value1(Long value) {
        setTin(value);
        return this;
    }

    @Override
    public OrganisationRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public OrganisationRecord value3(Long value) {
        setAccount(value);
        return this;
    }

    @Override
    public OrganisationRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrganisationRecord
     */
    public OrganisationRecord() {
        super(Organisation.ORGANISATION);
    }

    /**
     * Create a detached, initialised OrganisationRecord
     */
    public OrganisationRecord(Long tin, String name, Long account) {
        super(Organisation.ORGANISATION);

        setTin(tin);
        setName(name);
        setAccount(account);
    }

    /**
     * Create a detached, initialised OrganisationRecord
     */
    public OrganisationRecord(generated.tables.pojos.Organisation value) {
        super(Organisation.ORGANISATION);

        if (value != null) {
            setTin(value.getTin());
            setName(value.getName());
            setAccount(value.getAccount());
        }
    }
}
